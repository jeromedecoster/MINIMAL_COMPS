<?xml version="1.0" encoding="UTF-8"?>
<project name="macro-asdoc">
	
	<!--
	
	Required in parent build file :
	<taskdef resource="net/sf/antcontrib/antlib.xml" classpath="${basedir}/build/libs/ant-contrib-1.0b3.jar"/>
	
	-->
	
	<macrodef name="asdoc">
		<!-- required attributes -->
		<attribute name="doc-classes" default=""/>
		<attribute name="source-path" default=""/>
		<attribute name="output" default=""/>
		<!-- optional attributes -->
		<attribute name="title" default=""/>
		<attribute name="footer" default=""/>
		<!--
		les valeurs doivent etre espace par des virgules
		external-library-path="ici.swc,la.swc"
		-->
		<attribute name="external-library-path" default=""/>
		<attribute name="exclude-dependencies" default="true"/>
		<sequential>
			<var name="line" value=" "/>
			<if>
				<equals arg1="@{doc-classes}" arg2="" />
				<then>
					<fail message="Attribute 'doc-classes' required" />
				</then>
			</if>
			<if>
				<equals arg1="@{source-path}" arg2="" />
				<then>
					<fail message="Attribute 'source-path' required" />
				</then>
			</if>
			<if>
				<equals arg1="@{output}" arg2="" />
				<then>
					<fail message="Attribute 'output' required" />
				</then>
			</if>
			<if>
				<equals arg1="@{title}" arg2="" />
				<else>
					<var name="line" value="${line} -main-title '@{title}' -window-title '@{title}'"/>
				</else>
			</if>
			<if>
				<equals arg1="@{footer}" arg2="" />
				<else>
					<var name="line" value="${line} -footer '@{footer}'"/>
				</else>
			</if>
			<if>
				<equals arg1="@{external-library-path}" arg2="" />
				<else>
					<var name="line" value="${line} -external-library-path+=@{external-library-path}"/>
				</else>
			</if>
			
			<!--
			<echo>line:${line}</echo>
			-->
			
			<java jar="${flex.asdoc.jar}" dir="${flex.dir}/frameworks" fork="true" failonerror="true">
				<arg line ="-doc-classes @{doc-classes}"/>
			    <arg line ="-source-path @{source-path}"/>	
				<arg line="-exclude-dependencies=@{exclude-dependencies}"/>
				<arg line="-warnings=false"/>
				
		        <arg line="${line}"/>
				
				<arg line="-output @{output}"/>
			</java>
			
		</sequential>
	</macrodef>
	
</project>

<!--
	options
	
	-output <filename>
			alias -o
			the filename of the SWF movie to create
	
	-include-sources [path-element] [...]
			alias -is
			a list of directories and source files to include in the output SWC
			(repeatable)
	
	-compiler.external-library-path [path-element] [...]
			alias -el
			list of SWC files or directories to compile against but to omit from
			linking (repeatable)
	
	-static-link-runtime-shared-libraries
			alias -static-rsls
			statically link the libraries specified by the
			-runtime-shared-libraries-path option.
	
	-compiler.verbose-stacktraces
			alias -verbose-stacktraces
			save callstack information to the SWF for debugging (advanced)
	
	-compiler.headless-server
			alias -headless-server
			a flag to set when Flex is running on a server without a display
			(advanced)
	
	-compiler.library-path [path-element] [...]
			alias -library-path
			list of SWC files or directories that contain SWC files (repeatable)
	
	-link-report <filename>
			Output a XML-formatted report of all definitions linked into the
			application. (advanced)
	
-->






